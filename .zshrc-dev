# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(zsh-autosuggestions zsh-syntax-highlighting history jsontools)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

export FZF_DEFAULT_COMMAND="fd . ~/workplace"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd -t d . ~/workplace"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

set-title() {
    echo -e "\e]0;$*\007"
}

ssh() {
    set-title $*;
    /usr/bin/ssh -2 $*;
    set-title $HOST;
}

alias e=emacs
alias bb=brazil-build

alias bba='brazil-build apollo-pkg'
alias bre='brazil-runtime-exec'
alias brc='brazil-recursive-cmd'
alias bws='brazil ws'
alias bwsuse='bws use --gitMode -p'
alias bwscreate='bws create -n'
alias brc=brazil-recursive-cmd
alias bbr='brc brazil-build'
alias bball='brc --allPackages'
alias bbb='brc --allPackages brazil-build'
alias bbra='bbr apollo-pkg'
alias cdex="cd /workplace/tomtwang/unison/EdgeXService/src/EdgeXService/"
alias cdef="cd /workplace/tomtwang/unison/EdgeFlowService/src/EdgeFlowService"
alias removeRustToolchains="find . -name 'rust-toolchain.toml' -delete"
alias removeCargoLock="find . -name 'Cargo.lock' -delete"
function dockerremoveimage() {docker rmi $(docker images | grep '$1')}
alias forge='aws forge --region us-west-2 --endpoint-url https://fes.us-west-2.prod.forgeservice.ec2.aws.dev'
alias roverClean='docker image prune -a --filter "until=24h"'
alias habClean='brazil-package-cache clean'
alias habStart='share-http . 9002'
export PATH=$HOME/.toolbox/bin:$PATH
alias habCount='~/ncdu -x /'
alias apollosync='brazil ws --sync --md'
alias roverrun='./custom-rde workflow run'
export EDA_AUTO="$HOME/.config/eda/completion"
mkdir -p $EDA_AUTO
eda completions zsh > $EDA_AUTO/_eda
fpath=($EDA_AUTO $fpath)
autoload -Uz compinit
compinit
eval "$(starship init zsh)"

export STARSHIP_CONFIG=~/example/non/default/path/starship.toml


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


#PATH="$HOME/.local/bin:$PATH"
alias vim='nvim'
export JAVA_HOME=$(dirname $(dirname $(realpath /usr/bin/java)))
export PATH=/$JAVA_HOME:/apollo/env/envImprovement/bin/:$PATH
#export RUSTUP_HOME=$HOME/.rustup
#export CARGO_HOME=$HOME/.cargo/bin/
#export PATH=$PATH:$RUSTUP_HOME:$CARGO_HOME

alias switch-java-version='sudo alternatives --config java && source ~/.zshrc'
alias java='/usr/bin/java'


export AWS_EC2_METADATA_DISABLED=true
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

function runx() {
  for ((n=0;n<$1;n++))
    do ${*:2}
  done
}

alias adabeta='ada credentials update --account=749061878630 --provider=conduit --role=IibsAdminAccess-DO-NOT-DELETE --profile=default'
alias adaprod='ada credentials update --account=749848647845 --provider=conduit --role=ForgeReadOnly --profile=default --once'
alias adafallback='ada credentials update --account=579748028055 --provider=conduit --role=IibsAdminAccess-DO-NOT-DELETE --profile=default'
alias adadev='ada credentials update --account=975050181663 --provider=conduit --role=EdgeXServiceAlpha-ContainerTaskRole'
alias openport='socat TCP-LISTEN:9999,reuseaddr,fork TCP:localhost:80'
alias clear='clear && tmux clear-history'


# Check if tmux is available
if command -v tmux &> /dev/null; then
  # Check if inside a tmux session
  if [[ -z "$TMUX" ]]; then
    # If not inside a tmux session, attach or create one
    # tmux attach || tmux
  fi
fi
#eval "$(zellij setup --generate-auto-start zsh)"
#zellij attach --create
precmd () {
  echo -n -e "\a"
}
